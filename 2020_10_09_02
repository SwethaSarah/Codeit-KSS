Question : 

Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array.
Note:
The number of elements initialized in nums1 and nums2 are m and n respectively.
You may assume that nums1 has enough space (size that is equal to m + n) to hold additional elements from nums2.
Example:
Input:
nums1 = [1,2,3,0,0,0], m = 3
nums2 = [2,5,6],       n = 3
Output: [1,2,2,3,5,6]

Constraints:
-109 <= nums1[i], nums2[i] <= 109
nums1.length == m + n
nums2.length == n2020_10_09_022020_10_09_02

---------------------------------------------------------------------------------------------------------------------

Solution :

def mergearray(n,m,arr1,arr2):
    i = n - 1
    j = m - 1
    lastIndex = n + m - 1
    while (j >= 0) : 
        if (i >= 0 and arr1[i] > aar2[j]): 
            arr1[lastIndex] = arr1[i]  
            i -= 1
        else: 
            arr1[lastIndex] = arr2[j] 
            j -= 1
        lastIndex-= 1
    
n = int(input())
arr1 = list(map(int,input().split()))
m = int(input())
arr2 = list(map(int,input().split()))
mergearray(n,m,arr1,arr2)
print(*arr1)
